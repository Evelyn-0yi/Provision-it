# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "test" ]
  pull_request:
    branches: [ "main", "test" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports: [5432:5432]
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      TEST_DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      SECRET_KEY: test-secret-key-for-ci
      FLASK_ENV: testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: |
          playwright install chromium

      - name: Set up test database
        run: |
          python test/test_database/manage_test_db.py full-setup

      - name: Run unit tests
        run: |
          pytest test/tests/unit/ -v --cov=app --cov-report=term-missing --cov-report=html:htmlcov --cov-report=xml:coverage.xml --cov-fail-under=40 --tb=short --maxfail=3

      - name: Run database tests
        run: |
          pytest test/tests/test_db.py test/tests/test_database_setup.py -v --tb=short --maxfail=3

      - name: Run API tests
        run: |
          pytest test/tests/test_user_api.py -v --tb=short --maxfail=3

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            htmlcov/
            coverage.xml